name: TerraAWG Multi-World Generator
on:
  workflow_dispatch:
    inputs:
      run_count:
        description: 'How many worlds do you want to generate?'
        required: true
        type: number
        default: 1
      timeouts:
        description: 'Timeout in minutes for each run (e.g., "30" or "30,20,40"). If fewer values are provided, the last value is reused.'
        required: true
        type: string
        default: '30'

jobs:
  generate-worlds:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        run_number: ${{ fromJson(format('[{0}]', join(range(1, github.event.inputs.run_count), ','))) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Make TerraAWG executable
        run: chmod +x Terra/terra-awg

      - name: Run World Generator (Run ${{ matrix.run_number }} of ${{ github.event.inputs.run_count }})
        id: run_generator
        shell: bash
        run: |
          echo "--- Preparing Run #${{ matrix.run_number }} ---"
          
          IFS=',' read -r -a timeout_array <<< "${{ github.event.inputs.timeouts }}"
          index=$((${{ matrix.run_number }} - 1))
          
          if [[ $index -ge ${#timeout_array[@]} ]]; then
            timeout_value=${timeout_array[-1]}
          else
            timeout_value=${timeout_array[$index]}
          fi
          
          echo "Using a timeout of ${timeout_value} minutes for this run."

          if timeout ${timeout_value}m bash -c 'cd Terra && ./terra-awg'; then
            echo "World generator succeeded for run #${{ matrix.run_number }}."
          else
            exit_code=$?
            if [ $exit_code -eq 124 ]; then
              echo "::error::Run #${{ matrix.run_number }} failed: Timed out after ${timeout_value} minutes."
            else
              echo "::error::Run #${{ matrix.run_number }} failed with a different error (exit code $exit_code)."
            fi
            exit 1
          fi

          echo "--- Organizing Files for Run #${{ matrix.run_number }} ---"
          world_file=$(find Terra -maxdepth 1 -name "*.wld" -print -quit)
          
          if [[ -z "$world_file" ]]; then
            echo "::error::Could not find a generated .wld file after a successful run."
            exit 1
          fi

          world_name=$(basename "$world_file" .wld)
          folder_name="${{ matrix.run_number }}_${world_name}"
          
          echo "Creating directory: output/${folder_name}"
          mkdir -p "output/${folder_name}"
          
          echo "Moving generated files..."
          mv Terra/*.wld "output/${folder_name}/"
          mv Terra/*.png "output/${folder_name}/"
          
          echo "Files for run #${{ matrix.run_number }} have been successfully moved."

      - name: Upload Artifact for this Run
        uses: actions/upload-artifact@v4
        with:
          name: generated-run-${{ matrix.run_number }}
          path: output/
          if-no-files-found: error

  combine-artifacts:
    needs: generate-worlds
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Download all generated world folders
        uses: actions/download-artifact@v4
        with:
          path: combined-output/
          pattern: generated-run-*
          merge-multiple: true

      - name: Upload Single Combined Artifact
        uses: actions/upload-artifact@v4
        with:
          name: All-Generated-Worlds
          path: combined-output/
          if-no-files-found: warn
