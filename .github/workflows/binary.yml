name: Compile C++ Binary

on:
  workflow_dispatch:
    inputs:
      binary_name:
        description: 'The final name for the binary (e.g., TerrariaServer.bin.x86_64)'
        required: true
        default: 'TerrariaServer.bin.x86_64'
      chmod_permissions:
        description: 'Permissions for the binary (e.g., 777 or 755)'
        required: true
        default: '755'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Clang compiler
        run: sudo apt-get update && sudo apt-get install -y clang

      - name: Write the provided C code to source.c
        run: |
          cat <<'SOURCE_CODE' > source.c
          #include <unistd.h>
          #include <stdlib.h>
          #include <stdio.h>
          #include <sys/stat.h>

          int main(int argc, char *argv[]) {
              setenv("DOTNET_ROOT", "./dotnet", 1);
              setenv("LD_LIBRARY_PATH", "./lib", 1);
              const char* target_program = "./TShock.Server";
              chmod(target_program, 0755);
              argv[0] = (char*)target_program;
              execv(target_program, argv);
              perror("FATAL ERROR: execv failed to launch ./TShock.Server");
              return 1;
          }
          SOURCE_CODE

      - name: Compile the C code into a static binary
        run: clang -static source.c -o "${{ github.event.inputs.binary_name }}"

      - name: Set permissions for the binary
        run: chmod ${{ github.event.inputs.chmod_permissions }} "${{ github.event.inputs.binary_name }}"

      - name: Upload the binary as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.binary_name }}
          path: ${{ github.event.inputs.binary_name }}
