name: TerraAWG Runner (Ubuntu)
on:
  workflow_dispatch:
    inputs:
      use_custom_ini:
        description: 'Bypass all options below and use the existing Terra/terra-awg.ini in the repo?'
        required: true
        type: boolean
        default: false
      name:
        description: 'World Name (use RANDOM for a random name)'
        required: true
        type: string
        default: 'Terra AWG World'
      seed:
        description: 'World Seed (use RANDOM for a random seed)'
        required: true
        type: string
        default: 'RANDOM'
      size:
        description: 'Select a world size'
        required: true
        type: choice
        options: [Extra Small, Small, Medium, Large, Extra Large]
        default: 'Medium'
      evil:
        description: 'Select the world evil'
        required: true
        type: choice
        options: [RANDOM, corruption, crimson]
        default: 'RANDOM'
      hardmode_options:
        description: 'Select a Hardmode option'
        required: true
        type: choice
        options: [Disabled, Enabled, 'Enabled (with Hardmode Loot)']
        default: 'Disabled'
      starter_options:
        description: 'Select starter home and equipment options'
        required: true
        type: choice
        options:
        - 'No'
        - 'Home Only'
        - 'Home + Iron Gear'
        - 'Home + Platinum Gear'
        - 'Home + Hellstone Gear'
        - 'Home + Mythril Gear'
        default: 'No'
      world_options:
        description: 'Enter numbers for options (e.g., 13). 1=Drunk, 2=Shattered, 3=FTW, 4=Sunken, 5=Purity'
        required: false
        type: string

jobs:
  generate-world:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Make TerraAWG executable
        run: chmod +x Terra/terra-awg

      - name: Generate config file from inputs
        if: github.event.inputs.use_custom_ini == false
        shell: bash
        run: |
          width=6400; height=1800
          case "${{ github.event.inputs.size }}" in
            "Extra Small") width=2100; height=600 ;;
            "Small")       width=4200; height=1200 ;;
            "Medium")      width=6400; height=1800 ;;
            "Large")       width=8400; height=2400 ;;
            "Extra Large") width=12600; height=3600 ;;
          esac

          hardmode="false"; hardmodeLoot="false"
          case "${{ github.event.inputs.hardmode_options }}" in
            "Enabled") hardmode="true" ;;
            "Enabled (with Hardmode Loot)") hardmode="true"; hardmodeLoot="true" ;;
          esac

          generateHome="false"; equipment="none"
          case "${{ github.event.inputs.starter_options }}" in
            "Home Only")              generateHome="true" ;;
            "Home + Iron Gear")       generateHome="true"; equipment="iron" ;;
            "Home + Platinum Gear")   generateHome="true"; equipment="platinum" ;;
            "Home + Hellstone Gear")  generateHome="true"; equipment="hellstone" ;;
            "Home + Mythril Gear")    generateHome="true"; equipment="mythril" ;;
          esac

          options_string="${{ github.event.inputs.world_options }}"
          doubleTrouble="false"; if [[ "$options_string" == *"1"* ]]; then doubleTrouble="true"; fi
          shattered="false"; if [[ "$options_string" == *"2"* ]]; then shattered="true"; fi
          forTheWorthy="false"; if [[ "$options_string" == *"3"* ]]; then forTheWorthy="true"; fi
          sunken="false"; if [[ "$options_string" == *"4"* ]]; then sunken="true"; fi
          purity="false"; if [[ "$options_string" == *"5"* ]]; then purity="true"; fi

          cat <<EOF > "Terra/terra-awg.ini"
          [world]
          name = ${{ github.event.inputs.name }}
          seed = ${{ github.event.inputs.seed }}
          width = $width
          height = $height
          mode = classic
          evil = ${{ github.event.inputs.evil }}
          home = $generateHome
          [variation]
          equipment = $equipment
          doubleTrouble = $doubleTrouble
          shattered = $shattered
          sunken = $sunken
          purity = $purity
          forTheWorthy = $forTheWorthy
          hardmode = $hardmode
          hardmodeLoot = $hardmodeLoot
          [extra]
          map = true
          EOF

          cat "Terra/terra-awg.ini"

      - name: Run World Generator
        id: run_generator
        continue-on-error: true
        shell: bash
        run: |
          cd Terra
          ./terra-awg
          cd ..

      - name: Upload Success Artifact
        if: steps.run_generator.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: generated-world-files
          path: |
            Terra/*.wld
            Terra/*.png
          if-no-files-found: error

      - name: Handle Generation Failure
        if: steps.run_generator.outcome == 'failure'
        run: |
          echo "The world generator failed. Check the 'Run World Generator' step logs for details." > "Cant do it.txt"
      
      - name: Upload Failure Artifact
        if: steps.run_generator.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: generator-failed
          path: Cant do it.txt
